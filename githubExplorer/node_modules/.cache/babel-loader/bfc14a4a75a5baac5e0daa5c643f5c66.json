{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lucas/Desktop/Programas/GitHub/Bootcamp-GoStack-2020/N\\xEDvel-03/primeiro-projeto-react/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImage from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories } from './styles';\n\nconst Dashboard = () => {\n  _s();\n\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório');\n    }\n\n    const response = await api.get(`repos/${newRepo}`);\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n    setNewRepo('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logoImage,\n      alt: \"Github Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Explore reposit\\xF3rios no GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleAddRepository,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newRepo,\n        onChange: e => setNewRepo(e.target.value),\n        placeholder: \"Digite o nome do reposit\\xF3rio\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      children: repositories.map(repository => /*#__PURE__*/_jsxDEV(Link, {\n        to: \"teste\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: repository.owner.avatar_url,\n          alt: repository.owner.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: repository.full_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: repository.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, repository.full_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"Pj1VI7q/KRi1hURk9OB9aG330jc=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/lucas/Desktop/Programas/GitHub/Bootcamp-GoStack-2020/Nível-03/primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","Link","FiChevronRight","api","Title","Form","Repositories","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","logoImage","e","target","value","map","owner","avatar_url","login","full_name","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;;AAIA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,QAA0C,UAA1C;;AAWA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAe,EAAf,CAAhD;;AAEA,iBAAec,mBAAf,CAAmCC,KAAnC,EAAsE;AACpEA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACR,OAAL,EAAc;AACZG,MAAAA,aAAa,CAAC,oCAAD,CAAb;AACD;;AAED,UAAMM,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAqB,SAAQV,OAAQ,EAArC,CAAvB;AAEA,UAAMW,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAEAP,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,UAAlB,CAAD,CAAf;AACAV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEY,SAAV;AAAqB,MAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEP,mBAAhB;AAAA,8BACE;AACE,QAAA,KAAK,EAAEN,OADT;AAEE,QAAA,QAAQ,EAAEc,CAAC,IAAIb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAF3B;AAGE,QAAA,WAAW,EAAC,iCAHd;AAIE,QAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE,QAAC,YAAD;AAAA,gBACGZ,YAAY,CAACa,GAAb,CAAiBN,UAAU,iBAC1B,QAAC,IAAD;AAAiC,QAAA,EAAE,EAAC,OAApC;AAAA,gCACE;AACE,UAAA,GAAG,EAAEA,UAAU,CAACO,KAAX,CAAiBC,UADxB;AAEE,UAAA,GAAG,EAAER,UAAU,CAACO,KAAX,CAAiBE;AAFxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,kCACE;AAAA,sBAAST,UAAU,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIV,UAAU,CAACW;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eASE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAWX,UAAU,CAACU,SAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAgCD,CApDD;;GAAMtB,S;;KAAAA,S;AAqDN,eAAeA,SAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { log } from 'console';\nimport api from '../../services/api';\n\nimport logoImage from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório');\n    }\n\n    const response = await api.get<Repository>(`repos/${newRepo}`);\n\n    const repository = response.data;\n\n    setRepositories([...repositories, repository]);\n    setNewRepo('');\n  }\n\n  return (\n    <>\n      <img src={logoImage} alt=\"Github Explorer\" />\n      <Title>Explore repositórios no GitHub</Title>\n\n      <Form onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n          type=\"text\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      <Repositories>\n        {repositories.map(repository => (\n          <Link key={repository.full_name} to=\"teste\">\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}